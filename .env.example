# Kotlin MCP Server Environment Configuration
# Copy this file to .env and update the values

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# Path to your Android/Kotlin project workspace
WORKSPACE_PATH=/path/to/your/android/project

# Path to the MCP server directory (absolute path)
MCP_SERVER_DIR=/path/to/kotlin-mcp-server

# =============================================================================
# SECURITY & PRIVACY CONFIGURATION
# =============================================================================

# Strong password for data encryption (AES-256)
# Generate with: openssl rand -base64 32
MCP_ENCRYPTION_PASSWORD=your-secure-password-here

# Compliance modes (comma-separated): gdpr, hipaa, both, or none
COMPLIANCE_MODE=gdpr,hipaa

# =============================================================================
# AI/ML INTEGRATION (Optional)
# =============================================================================

# OpenAI API Key for GPT models
OPENAI_API_KEY=your-openai-api-key-here

# Anthropic API Key for Claude models
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Local LLM endpoint (Ollama, LocalAI, etc.)
LOCAL_LLM_ENDPOINT=http://localhost:11434

# Default LLM provider: openai, anthropic, local
DEFAULT_LLM_PROVIDER=local

# Privacy mode: true = local inference only, false = allow external APIs
PRIVACY_MODE=true

# =============================================================================
# CLOUD STORAGE INTEGRATION (Optional)
# =============================================================================

# AWS Configuration
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_DEFAULT_REGION=us-east-1
AWS_S3_BUCKET=your-backup-bucket

# Google Cloud Configuration
GCP_PROJECT_ID=your-gcp-project-id
GCP_CREDENTIALS_PATH=/path/to/gcp-credentials.json

# Azure Configuration
AZURE_STORAGE_ACCOUNT=your-storage-account
AZURE_STORAGE_KEY=your-storage-key
AZURE_CONTAINER=your-container

# =============================================================================
# NETWORKING & SERVER CONFIGURATION
# =============================================================================

# MCP Bridge Server (for VS Code extension)
# The bridge server provides HTTP API access to MCP tools
MCP_BRIDGE_HOST=localhost
MCP_BRIDGE_PORT=8080

# Health check endpoint: http://localhost:8080/health
# Tool execution endpoint: http://localhost:8080/ (POST)

# VS Code server port range (for multiple instances)
VSCODE_SERVER_PORT_START=8081
VSCODE_SERVER_PORT_END=8090

# Workspace detection for bridge server
VSCODE_WORKSPACE_FOLDER=/path/to/vscode/workspace  # Override auto-detection

# =============================================================================
# DEVELOPMENT & DEBUGGING
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path (optional, uses console if not set)
LOG_FILE_PATH=/tmp/mcp-server.log

# Performance monitoring
ENABLE_PERFORMANCE_MONITORING=true
PERFORMANCE_LOG_PATH=/tmp/mcp-performance.log

# Development mode features
DEV_MODE=false
ENABLE_DEBUG_TOOLS=false

# =============================================================================
# BACKUP & SYNC CONFIGURATION
# =============================================================================

# Backup directory (local)
BACKUP_DIR=./backups

# Automatic backup interval (hours)
AUTO_BACKUP_INTERVAL=24

# Sync strategy: real_time, scheduled, manual
SYNC_STRATEGY=scheduled

# Encryption for backups: true/false
ENCRYPT_BACKUPS=true

# =============================================================================
# API INTEGRATION CONFIGURATION
# =============================================================================

# External API rate limiting
API_RATE_LIMIT_PER_MINUTE=60
API_TIMEOUT_SECONDS=30

# Request logging
LOG_API_REQUESTS=true
LOG_API_RESPONSES=false

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Audit logging
ENABLE_AUDIT_LOGGING=true
AUDIT_LOG_PATH=./mcp_security.log

# Access control
REQUIRE_AUTHENTICATION=false
MAX_SESSION_DURATION=3600

# Data retention (days)
LOG_RETENTION_DAYS=90
AUDIT_RETENTION_DAYS=365

# =============================================================================
# TESTING & QUALITY ASSURANCE
# =============================================================================

# Test environment settings
TEST_MODE=false
SKIP_EXTERNAL_APIS=false
MOCK_AI_RESPONSES=false

# Performance testing
ENABLE_BENCHMARKING=false
BENCHMARK_ITERATIONS=100

# =============================================================================
# EXAMPLES FOR COMMON SETUPS
# =============================================================================

# Example for macOS user:
# WORKSPACE_PATH=/Users/yourusername/AndroidStudioProjects/MyApp
# MCP_SERVER_DIR=/Users/yourusername/Documents/kotlin-mcp-server

# Example for Linux user:
# WORKSPACE_PATH=/home/yourusername/android-projects/myapp
# MCP_SERVER_DIR=/home/yourusername/kotlin-mcp-server

# Example for Windows user (use forward slashes):
# WORKSPACE_PATH=C:/Users/yourusername/AndroidStudioProjects/MyApp
# MCP_SERVER_DIR=C:/Users/yourusername/kotlin-mcp-server

# =============================================================================
# VALIDATION NOTES
# =============================================================================

# Test your configuration:
# 1. Check paths exist: ls "$WORKSPACE_PATH" && ls "$MCP_SERVER_DIR"
# 2. Test server: python3 simple_mcp_server.py --test
# 3. Validate environment: python3 -c "import os; print('âœ… Config loaded')"
